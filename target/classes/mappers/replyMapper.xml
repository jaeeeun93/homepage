<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper

PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"

"http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="org.zerock.mapper.ReplyMapper">



	<select id="list" resultType="ReplyVO">

		select * from tbl_reply where bno = #{bno} order by rno desc

	</select>

	

	<insert id="create">

		insert into tbl_reply (bno, replytext, replyer) values (#{bno},#{replytext},#{replyer})

	</insert>

	<update id="updateIp">

		update tbl_reply set ip = #{ip} where replyer = #{replyer} and replytext = #{replytext}

	</update>
	
	

	<update id="update">

		update tbl_reply set replytext = #{replytext}, updatedate = now() where rno = #{rno}

	</update>

	

	<delete id="delete">

		delete from tbl_reply where rno = #{rno}

	</delete>

	

	<select id="listPage" resultType="ReplyVO">

		select * from tbl_reply where bno = #{bno} order by rno desc 

		limit #{cri.pageStart}, #{cri.perPageNum}

	</select>



	<select id="count" resultType="int">

		select count(bno) from tbl_reply where bno =#{bno}

	</select>

	<select id="read_reply" resultType="ReplyVO">
		<![CDATA[
		select * from tbl_reply where replyer = #{id}
		]]>
		<include refid="search_reply"></include>
 		<![CDATA[
		order by regdate desc limit #{pageStart}, #{perPageNum}
		]]>
	</select>
	
	<select id="listReplyCount" resultType="int">
		<![CDATA[
		select count(replyer) from tbl_reply where replyer = #{id}
		]]>
		<include refid="search_reply"></include>
	</select>
	
	<sql id="search_reply">
		<if test="searchType != null" >
			<!-- 
			MyBatis에서는 변수가 자바객체처럼 사용되므로 
			( OGNL (Object Graph Navigation Language)를 사용하여 속성 처리를 하고 있기 때문에)
			자바에서 사용되는 문자열 비교 메소드를 이용하면 된다.
			단 비교할 문자를 먼저 쓴 경우도 에러 발생.
			<if test="searchType == 't'.toString()"> (o)
			<if test="searchType eq 't'.toString()"> (o)
			<if test="searchType.toString() == 't'.toString()"> (o)
			<if test="searchType.equalsIgnoreCase('t')"> (o)
			<if test='searchType == "t"'> (o)
	
			// 작은, 큰 따옴표 순서
			<if test='"t".equals(searchType)'> (o)
			<if test="'t'.equals(searchType)"> (x)
			<if test='searchType.equals("t")'> (o)
			<if test="searchType.equals('t')"> (x)
			-->
			<if test="searchType == 'c'.toString()">
				and replytext like CONCAT('%', #{keyword}, '%')
			</if>
		</if>
	</sql>
</mapper>